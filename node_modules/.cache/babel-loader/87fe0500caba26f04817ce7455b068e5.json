{"ast":null,"code":"var _jsxFileName = \"/home/boris/Desktop/react-code-box-demo/react-code-box-demo/src/App.tsx\";\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport \"@glorious/demo/dist/gdemo.min.css\";\nimport CodeBox from 'react-code-box/dist/index';\n\nfunction App() {\n  let code = `\n  class TodoList extends Component {\n      state = { todos: [], text: '' };\n      updateText = e => {\n          this.setState({ text: e.target.value });\n      };\n      addItem = () => {\n          let { todos, text } = this.state;\n          todos = todos.concat({ text });\n          this.setState({ todos, text: '' });\n      };\n      render({ }, { todos, text }) {\n          return (\n              <div>\n                  <form onSubmit={this.addItem} action=\"javascript:\">\n                      <input value={text} onInput={this.updateText} />\n                      <input type=\"submit\" value=\"Add\" />\n                  </form>\n                  <ul>\n                      { todos.map( todo => (\n                          <li>{todo.text}</li>\n                      )) }\n                  </ul>\n              </div>\n          );\n      }\n  }\n  \n  render(<TodoList />);\n  `;\n  useEffect(() => {\n    const Prism = require(\"prismjs\"); // The code snippet you want to highlight, as a string\n\n\n    const code = `var data = 1;`; // Returns a highlighted HTML string\n\n    const html = Prism.highlight(code, Prism.languages.javascript, \"jsx\");\n    console.log(html);\n    document.querySelector(\".language-js\").innerHTML = html;\n  }); // Returns a highlighted HTML string\n\n  return (\n    /*#__PURE__*/\n    // <pre>\n    //   <code className=\"language-js\"></code>\n    // </pre>\n    React.createElement(CodeBox, {\n      title: \"hahha\",\n      variant: \"dark\",\n      code: code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    })\n  ); // return (\n  //   <div className=\"App\">\n  //     das\n  //     <CodeBox title=\"hahha\" variant=\"dark\" code={code} />\n  //   </div>\n  // );\n}\n\nexport default App;","map":{"version":3,"sources":["/home/boris/Desktop/react-code-box-demo/react-code-box-demo/src/App.tsx"],"names":["React","useEffect","CodeBox","App","code","Prism","require","html","highlight","languages","javascript","console","log","document","querySelector","innerHTML"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AACA,OAAO,mCAAP;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AACA,SAASC,GAAT,GAAe;AACb,MAAIC,IAAI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAZ;AA+BAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB,CADc,CAGd;;;AACA,UAAMF,IAAI,GAAI,eAAd,CAJc,CAMd;;AACA,UAAMG,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgBJ,IAAhB,EAAsBC,KAAK,CAACI,SAAN,CAAgBC,UAAtC,EAAkD,KAAlD,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEAM,IAAAA,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAwCC,SAAxC,GAAoDR,IAApD;AACD,GAXQ,CAAT,CAhCa,CA4Cb;;AAEA;AAAA;AACE;AACA;AACA;AACA,wBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAC,MAA/B;AAAsC,MAAA,IAAI,EAAEH,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF,IA9Ca,CAoDb;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"@glorious/demo/dist/gdemo.min.css\";\nimport CodeBox from 'react-code-box/dist/index'\nfunction App() {\n  let code = `\n  class TodoList extends Component {\n      state = { todos: [], text: '' };\n      updateText = e => {\n          this.setState({ text: e.target.value });\n      };\n      addItem = () => {\n          let { todos, text } = this.state;\n          todos = todos.concat({ text });\n          this.setState({ todos, text: '' });\n      };\n      render({ }, { todos, text }) {\n          return (\n              <div>\n                  <form onSubmit={this.addItem} action=\"javascript:\">\n                      <input value={text} onInput={this.updateText} />\n                      <input type=\"submit\" value=\"Add\" />\n                  </form>\n                  <ul>\n                      { todos.map( todo => (\n                          <li>{todo.text}</li>\n                      )) }\n                  </ul>\n              </div>\n          );\n      }\n  }\n  \n  render(<TodoList />);\n  `;\n\n  useEffect(() => {\n    const Prism = require(\"prismjs\");\n\n    // The code snippet you want to highlight, as a string\n    const code = `var data = 1;`;\n\n    // Returns a highlighted HTML string\n    const html = Prism.highlight(code, Prism.languages.javascript, \"jsx\");\n    console.log(html);\n\n    document.querySelector(\".language-js\")!.innerHTML = html;\n  });\n  // Returns a highlighted HTML string\n\n  return (\n    // <pre>\n    //   <code className=\"language-js\"></code>\n    // </pre>\n    <CodeBox title=\"hahha\" variant=\"dark\" code={code} />\n  );\n  // return (\n  //   <div className=\"App\">\n  //     das\n  //     <CodeBox title=\"hahha\" variant=\"dark\" code={code} />\n  //   </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}