{"ast":null,"code":"var _jsxFileName = \"/home/boris/Desktop/react-code-box-demo/react-code-box-demo/src/App.tsx\";\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport \"@glorious/demo/dist/gdemo.min.css\";\n\nfunction App() {\n  let code = `\n  class TodoList extends Component {\n      state = { todos: [], text: '' };\n      updateText = e => {\n          this.setState({ text: e.target.value });\n      };\n      addItem = () => {\n          let { todos, text } = this.state;\n          todos = todos.concat({ text });\n          this.setState({ todos, text: '' });\n      };\n      render({ }, { todos, text }) {\n          return (\n              <div>\n                  <form onSubmit={this.addItem} action=\"javascript:\">\n                      <input value={text} onInput={this.updateText} />\n                      <input type=\"submit\" value=\"Add\" />\n                  </form>\n                  <ul>\n                      { todos.map( todo => (\n                          <li>{todo.text}</li>\n                      )) }\n                  </ul>\n              </div>\n          );\n      }\n  }\n  \n  render(<TodoList />);\n  `;\n  useEffect(() => {\n    const Prism = require(\"prismjs\"); // The code snippet you want to highlight, as a string\n\n\n    const code = `var data = 1;`; // Returns a highlighted HTML string\n\n    const html = Prism.highlight(code, Prism.languages.javascript, \"jsx\");\n    console.log(html);\n    document.querySelector(\".language-js\").innerHTML = html;\n  }); // Returns a highlighted HTML string\n\n  return /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    className: \"language-js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  })); // return (\n  //   <div className=\"App\">\n  //     das\n  //     <CodeBox title=\"hahha\" variant=\"dark\" code={code} />\n  //   </div>\n  // );\n}\n\nexport default App;","map":{"version":3,"sources":["/home/boris/Desktop/react-code-box-demo/react-code-box-demo/src/App.tsx"],"names":["React","useEffect","App","code","Prism","require","html","highlight","languages","javascript","console","log","document","querySelector","innerHTML"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AACA,OAAO,mCAAP;;AAEA,SAASC,GAAT,GAAe;AACb,MAAIC,IAAI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAZ;AA+BAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMG,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB,CADc,CAGd;;;AACA,UAAMF,IAAI,GAAI,eAAd,CAJc,CAMd;;AACA,UAAMG,IAAI,GAAGF,KAAK,CAACG,SAAN,CACXJ,IADW,EAEXC,KAAK,CAACI,SAAN,CAAgBC,UAFL,EAGX,KAHW,CAAb;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEAM,IAAAA,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAwCC,SAAxC,GAAoDR,IAApD;AACD,GAfQ,CAAT,CAhCa,CAgDb;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAlDa,CAuDb;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"@glorious/demo/dist/gdemo.min.css\";\n\nfunction App() {\n  let code = `\n  class TodoList extends Component {\n      state = { todos: [], text: '' };\n      updateText = e => {\n          this.setState({ text: e.target.value });\n      };\n      addItem = () => {\n          let { todos, text } = this.state;\n          todos = todos.concat({ text });\n          this.setState({ todos, text: '' });\n      };\n      render({ }, { todos, text }) {\n          return (\n              <div>\n                  <form onSubmit={this.addItem} action=\"javascript:\">\n                      <input value={text} onInput={this.updateText} />\n                      <input type=\"submit\" value=\"Add\" />\n                  </form>\n                  <ul>\n                      { todos.map( todo => (\n                          <li>{todo.text}</li>\n                      )) }\n                  </ul>\n              </div>\n          );\n      }\n  }\n  \n  render(<TodoList />);\n  `;\n\n  useEffect(() => {\n    const Prism = require(\"prismjs\");\n\n    // The code snippet you want to highlight, as a string\n    const code = `var data = 1;`;\n\n    // Returns a highlighted HTML string\n    const html = Prism.highlight(\n      code,\n      Prism.languages.javascript,\n      \"jsx\"\n    );\n    console.log(html)\n    \n    document.querySelector(\".language-js\")!.innerHTML = html;\n  });\n  // Returns a highlighted HTML string\n\n  return (\n    <pre>\n      <code className=\"language-js\"></code>\n    </pre>\n  );\n  // return (\n  //   <div className=\"App\">\n  //     das\n  //     <CodeBox title=\"hahha\" variant=\"dark\" code={code} />\n  //   </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}